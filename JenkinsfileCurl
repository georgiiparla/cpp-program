def versionIdentifier

pipeline {
    agent any

    environment {
        // Build Configuration
        COMPILED_FILE_NAME   = 'program-foo-bar'
        ZIP_NAME             = 'base_bin.zip'

        // Nexus Base Configuration
        NEXUS_URL            = '172.20.10.25:8081'
        NEXUS_CREDENTIALS_ID = '7d196d2f-f3c1-4803-bde9-2d17d18776b3'
        NEXUS_REPO           = 'BASE'

        // Centralized Configuration
        NEXUS_REPO_URL       = "${NEXUS_URL}/repository/${NEXUS_REPO}"
        NEXUS_PATH_STRUCTURE = 'main'
    }

    stages {
        // Build stages (Checkout, Compile, Package, etc.)
        stage('Build & Package') {
            steps {
                cleanWs()
                checkout scm

                script {
                    versionIdentifier = sh(script: 'git rev-parse --short HEAD', returnStdout: true).trim()
                    echo "Using Git commit hash as version: ${versionIdentifier}"
                }

                echo "Compiling..."
                sh "g++ -I main/ main/*.cpp -o ${COMPILED_FILE_NAME}"
                echo "Packaging..."
                sh "zip ${ZIP_NAME} ${COMPILED_FILE_NAME}"
            }
        }

        // Nexus part
        stage('Publish Versioned and "Latest" Artifacts') {
            steps {
                script {
                    // Define both the versioned and the latest URL paths
                    def versionedUrl = "${NEXUS_REPO_URL}/${NEXUS_PATH_STRUCTURE}/${versionIdentifier}/${ZIP_NAME}"
                    def latestUrl = "${NEXUS_REPO_URL}/${NEXUS_PATH_STRUCTURE}/latest/${ZIP_NAME}"

                    withCredentials([usernamePassword(credentialsId: "${NEXUS_CREDENTIALS_ID}", usernameVariable: 'NEXUS_USER', passwordVariable: 'NEXUS_PASS')]) {
                        echo "Uploading VERSIONED artifact to: ${versionedUrl}"
                        sh """
                            curl -v -f -u "\$NEXUS_USER:\$NEXUS_PASS" \\
                                 --upload-file ${ZIP_NAME} \\
                                 "${versionedUrl}"
                        """

                        echo "Uploading LATEST artifact to: ${latestUrl}"
                        sh """
                            curl -v -f -u "\$NEXUS_USER:\$NEXUS_PASS" \\
                                 --upload-file ${ZIP_NAME} \\
                                 "${latestUrl}"
                        """
                    }
                    sh "rm -f ${ZIP_NAME}"
                }
            }
        }

        stage ('Retrieve and Verify Artifact') {
            steps {
                script {
                    def versionedUrl = "${NEXUS_REPO_URL}/${NEXUS_PATH_STRUCTURE}/latest/${ZIP_NAME}"
                    echo "Downloading and verifying LATEST artifact from: ${versionedUrl}"

                    withCredentials([usernamePassword(credentialsId: "${NEXUS_CREDENTIALS_ID}", usernameVariable: 'NEXUS_USER', passwordVariable: 'NEXUS_PASS')]) {
                        sh """
                            curl -v -f -u "\$NEXUS_USER:\$NEXUS_PASS" -o "${ZIP_NAME}" "${versionedUrl}"
                        """
                    }
                    sh "test -f ${ZIP_NAME}"
                    echo "Verification successful. File '${ZIP_NAME}' exists."
                }
            }
        }

        stage ("Deploy") {
            steps {
                echo 'Deploying...'
            }
        }
    }
}
